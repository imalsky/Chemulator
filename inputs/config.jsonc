// =========================================================================================
// ==              UNIFIED CONFIGURATION FOR SIREN AND ResNet MODELS                       ==
// =========================================================================================
// This configuration supports both SIREN and ResNet architectures for chemical kinetics prediction.
// Select the model type in the "model_hyperparameters" section.

{
  // ════════════════════════════════════════════════════════════════
  // ║                1. DATA & OUTPUT PATHS CONFIGURATION          ║
  // ════════════════════════════════════════════════════════════════
  "data_paths_config": {
    "hdf5_dataset_filename": "chem_data/data.h5",
    "dataset_splits_filename": "Xi_chem_data_splits.json"
  },
  
  "output_paths_config": {
    "fixed_model_foldername": "trained_model"  // Will be appended with model type
  },

  // ════════════════════════════════════════════════════════════════
  // ║                      2. DATA SPECIFICATION                   ║
  // ════════════════════════════════════════════════════════════════
  "data_specification": {
    // Chemical species that evolve over time
    "species_variables": [
      "C2H2_evolution", "CH4_evolution", "CO2_evolution", "CO_evolution",
      "H2O_evolution", "H2_evolution", "HCN_evolution", "H_evolution",
      "N2_evolution", "NH3_evolution", "OH_evolution", "O_evolution"
    ],
    
    // Global conditions (temperature, pressure)
    "global_variables": ["P_init", "T_init"],
    
    // All variables for normalization (must include all variables in HDF5)
    "all_variables": [
      "P_init", "T_init", "t_time",
      "C2H2_evolution", "CH4_evolution", "CO2_evolution", "CO_evolution",
      "H2O_evolution", "H2_evolution", "HCN_evolution", "H_evolution",
      "N2_evolution", "NH3_evolution", "OH_evolution", "O_evolution"
    ]
  },

  // ══════════════════════════════════════════════════════════════════
  // ║                    3. NORMALIZATION SETTINGS                     ║
  // ══════════════════════════════════════════════════════════════════
  "normalization": {
    // Default method for all variables not specified in key_methods
    // Setting to "error" will raise an exception for unspecified variables
    "default_method": "error",
    
    // Override normalization for specific variables
    "key_methods": { 
      // Global variables
      "T_init": "standard",              // Temperature - linear scale
      "P_init": "log-min-max",          // Pressure - log scale
      "t_time": "log-min-max",          // Time - log scale for wide range
      
      // Species variables - all use log-min-max for concentration ranges
      "C2H2_evolution" : "log-min-max",
      "CH4_evolution"  : "log-min-max",
      "CO2_evolution"  : "log-min-max",
      "CO_evolution"   : "log-min-max",
      "H2O_evolution"  : "log-min-max",
      "H2_evolution"   : "log-min-max",
      "HCN_evolution"  : "log-min-max",
      "H_evolution"    : "log-min-max",
      "N2_evolution"   : "log-min-max",
      "NH3_evolution"  : "log-min-max",
      "OH_evolution"   : "log-min-max",
      "O_evolution"    : "log-min-max"
    },
    
    // Percentile for symlog normalization threshold
    "symlog_percentile": 0.5,
    
    // Memory limit for quantile-based methods (IQR, symlog)
    "quantile_max_values_in_memory": 10000000
  },

  // ════════════════════════════════════════════════════════════════
  // ║                    4. MODEL HYPERPARAMETERS                    ║
  // ════════════════════════════════════════════════════════════════
  "model_hyperparameters": {
    // ╔═══════════════════════════════════════════════════════════╗
    // ║  MODEL SELECTION: Choose "siren" or "resnet"              ║
    // ╚═══════════════════════════════════════════════════════════╝
    "model_type": "resnet",  // Options: "siren" or "resnet"
    
    // ┌───────────────────────────────────────────────────────────┐
    // │                   Common Parameters                       │
    // └───────────────────────────────────────────────────────────┘
    // Network architecture - shared by both models
    "hidden_dims": [256, 256, 256, 256],
    
    // Time embedding configuration - shared by both models
    "use_time_embedding": true,
    "time_embedding_dim": 64,
    
    // ┌───────────────────────────────────────────────────────────┐
    // │              SIREN-Specific Parameters                    │
    // └───────────────────────────────────────────────────────────┘
    // Conditioning dimension for FiLM modulation (SIREN only)
    "condition_dim": 128,
    
    // SIREN frequency parameters
    "siren_w0_initial": 50.0,      // Initial layer frequency
    "siren_w0_hidden": 5.0,        // Hidden layer frequency
    
    // ┌───────────────────────────────────────────────────────────┐
    // │             ResNet-Specific Parameters                    │
    // └───────────────────────────────────────────────────────────┘
    // Random Fourier features (ResNet only)
    "fourier_features": 256,   // Number of Fourier features
    "fourier_scale": 1.0,      // Scale for Fourier frequencies
    
    // MLP block expansion ratio (ResNet only)
    "mlp_ratio": 2.0,
    
    // Dropout for ResNet (typically higher than SIREN)
    "dropout": 0.0,                // Only used by ResNet
    
    // Output activation for ResNet
    // Options: "sigmoid", "softplus", "none"
    // Really recommend leaving it at none for some reason right now
    "output_activation": "none" 
  },

  // ════════════════════════════════════════════════════════════════
  // ║               5. TRAINING HYPERPARAMETERS                      ║
  // ════════════════════════════════════════════════════════════════
  "training_hyperparameters": {
    // Data split configuration
    "val_frac": 0.15,              // 15% for validation
    "test_frac": 0.15,             // 15% for test
    "frac_of_data": 1.0,          // Use a fraction of the dataset for quick tests
    
    // Training duration
    "epochs": 100,
    "early_stopping_patience": 20,
    "min_delta": 1e-6,
    
    // Batch configuration - Adjust based on your hardware
    "batch_size": 1024,                      
    "gradient_accumulation_steps": 1,     
    "max_steps_per_epoch": 50000,  
    
    // Optimizer settings (AdamW)
    "learning_rate": 1e-4,         
    "weight_decay": 1e-5,          
    
    // Learning rate scheduling
    "scheduler_choice": "cosine",   // "cosine" or "plateau"
    
    // ReduceLROnPlateau parameters (if used)
    "patience": 10,                // Epochs without improvement
    "factor": 0.5,                 // LR reduction factor
    "min_lr": 1e-7,               // Minimum learning rate
    
    // CosineAnnealingWarmRestarts parameters (if used)
    "cosine_T_0": 20,             // Initial restart period
    "cosine_T_mult": 2,           // Period multiplier after restart
    
    // Loss function configuration
    "loss_function": "huber",        // "mse" or "huber"
    "huber_delta": 0.25,           // Delta for Huber loss (if used)
    
    // Training stability
    "gradient_clip_val": 1.0,      // Max gradient norm
    
    // Mixed precision training - Set based on your GPU
    "use_amp": false,              
    
    // Batch validation thresholds
    "max_invalid_batches": 100,    // Stop if too many NaN/inf losses
    "invalid_batch_threshold": 0.1  // Fraction of invalid batches to tolerate
  },

  // ════════════════════════════════════════════════════════════════
  // ║                 6. NUMERICAL CONSTANTS                          ║
  // ════════════════════════════════════════════════════════════════
  "numerical_constants": {
    // Small value to prevent log(0) and division by zero
    "epsilon": 1e-37,
    
    // Clamp range for normalized values to prevent extreme outliers
    "normalized_value_clamp": 100.0,
    
    // Minimum allowed standard deviation to prevent division issues
    "min_std": 1e-10,
    
    // Minimum time steps required per profile
    "min_time_steps": 10,
    
    // Default values moved from hardcoded constants
    "default_seed": 42,
    "default_time_embedding_dim": 64,
    "default_condition_dim": 64,
    "default_omega_0": 15.0,
    "siren_init_scale": 1.0
  },

  // ════════════════════════════════════════════════════════════════
  // ║                   7. MISCELLANEOUS SETTINGS                    ║
  // ════════════════════════════════════════════════════════════════
  "miscellaneous_settings": {
    // Reproducibility
    "random_seed": 42,
    
    // DataLoader configuration - Adjust based on your system
    "num_dataloader_workers": 8,          
    
    // Memory management for streaming datasets
    "profiles_per_chunk": 2048,           
    // Chunk sizes for data processing
    "default_chunk_size": 2048,
    "stats_chunk_size": 2048,
    
    // PyTorch 2.0 compilation - Set based on your hardware
    "use_torch_compile": true,           
    "torch_compile_mode": "default", 
    "save_jit_model": true,
    
    // Training monitoring
    "show_epoch_progress": true,          
    "log_gradient_norms": true,           
    
    // Debugging options (disable for production)
    "detect_anomaly": false               
  }
}