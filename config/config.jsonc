{
  "paths": {
    "raw_data_files": [
      "data/raw/run9001-result.h5",
      "data/raw/run9002-result.h5",
      "data/raw/run9003-result.h5",
      "data/raw/run9004-result.h5",
      "data/raw/run9005-result.h5",
      "data/raw/run9006-result.h5",
      "data/raw/run9007-result.h5",
      "data/raw/run9008-result.h5",
      "data/raw/run9009-result.h5",
      "data/raw/run9010-result.h5"
    ],
    "processed_data_dir": "data/processed-10-log-standard",
    "model_save_dir": "models",
    "log_dir": "logs"
  },

  "data": {
    "species_variables": [
      "C2H2_evolution",
      "CH4_evolution",
      "CO2_evolution",
      "CO_evolution",
      "H2O_evolution",
      "H2_evolution",
      "HCN_evolution",
      "H_evolution",
      "N2_evolution",
      "NH3_evolution",
      "OH_evolution",
      "O_evolution"
    ],
    "target_species_variables": [
      "C2H2_evolution",
      "CH4_evolution",
      "CO2_evolution",
      "CO_evolution",
      "H2O_evolution",
      "H2_evolution",
      "HCN_evolution",
      "H_evolution",
      "N2_evolution",
      "NH3_evolution",
      "OH_evolution",
      "O_evolution"
    ],
    "global_variables": ["P", "T"],
    "expected_globals": ["P", "T"],
    "time_variable": "t_time"
  },

  "preprocessing": {
    "min_value_threshold": 1e-25,
    "num_workers": 8,
    "hdf5_chunk_size": 16384,
    "trajectories_per_shard": 10000,
    "npz_compressed": false
  },

  "normalization": {
    "default_method": "log-standard",
    "methods": {
      "t_time": "log-min-max",
      "P": "log-standard",
      "T": "standard"
    },
    "epsilon": 1e-30,
    "min_std": 1e-10,
    "clamp_value": 50.0
  },


  "model": {
    "type": "DeepONet",
    "use_time_warp": true,
    "time_warp_hidden_dim": 64,
    "time_warp_bias_clamp": 0.25,  // Set to 0 to disable clamping
    "time_warp_bias_reg": 0.05,     // L2 regularization weight for bias


    // When true, DeepONet operates directly on species space without autoencoder
    // This skips stages 1 & 2 (AE pretraining and latent generation)
    "bypass_autoencoder": true,

    // When true, searches for compatible pre-trained autoencoders to reuse
    "reuse_autoencoder": true,

    // Latent dimension for autoencoder (ignored if bypass_autoencoder=true)
    "latent_dim": 64,
    // DeepONet basis functions
    "p": 256,
    // Trunk basis type: "linear" or "softmax"
    "trunk_basis": "linear",
    // Enable PoU regularization for linear basis
    "use_pou": true,
    // Architecture
    "ae_encoder_layers": [128, 128, 128, 120],
    "ae_decoder_layers": [128, 128, 128, 128, 128],
    "branch_layers": [4096, 4096, 4096, 4096, 4096, 4096, 4096],
    "trunk_layers": [4096, 4096, 4096, 4096, 4096, 4096, 4096],
    // Decoder output mode
    "decoder_output_mode": "linear",
    // No clamping in normalized space
    "output_clamp": null
  },

  "latent_generation": {
    "mode": "all"
  },

  "training": {
    "ae_per_trajectory": true,
    "ae_pretrain_epochs": 200,
    "ae_warmup_epochs": 10,
    "freeze_ae_after_pretrain": false,

    "epochs": 300,
    "batch_size": 8192,

    "train_time_sampling": "fixed",
    "train_fixed_times": "all",
    //"train_min_time_points": 8,
    //"train_max_time_points": 32,

    "val_time_sampling": "fixed",
    "val_fixed_times": "all",

    "learning_rate": 0.0005,
    "min_lr": 1e-08,
    "warmup_epochs": 10,
    "val_fraction": 0.15,
    "test_fraction": 0.15,
    "use_fraction": 1.0,
    "weight_decay": 0.00005,
    "betas": [0.9, 0.999],
    "gradient_clip": 1.0,
    "use_amp": false,

    "pou_weight": 0.05,
    "num_workers": 0
  },

  "system": {
    "seed": 42,
    "use_torch_export": false,
    "use_torch_compile": false,
    "compile_mode": "default",
    "cudnn_benchmark": true,
    "tf32": true,
    "cuda_memory_fraction": 0.95,
    "deterministic": false,
    "dtype": "float32"
  }
}
