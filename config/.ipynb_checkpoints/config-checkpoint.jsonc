{
    // ===== FILE PATHS =====
    "paths": {
        // Raw HDF5 data files to process
        "raw_data_files": [
            "data/raw/run9001-result.h5",
            //"data/raw/run9002-result.h5",
            //"data/raw/run9003-result.h5",
            //"data/raw/run9004-result.h5",
            //"data/raw/run8005-result.h5",
            //"data/raw/run8006-result.h5",
            //"data/raw/run8007-result.h5",
            //"data/raw/run8008-result.h5",
            //"data/raw/run8009-result.h5",
            //"data/raw/run8010-result.h5"
        ],
        // Directory for processed NPY shards
        "processed_data_dir": "data/processed",
        // Directory for saved models
        "model_save_dir": "data/models",
        // Directory for logs
        "log_dir": "logs"
    },
    
    // ===== DATA CONFIGURATION =====
    "data": {
        // Chemical species to predict (order matters!)
        "species_variables": [
            "C2H2_evolution",
            "CH4_evolution",
            "CO2_evolution",
            "CO_evolution",
            "H2O_evolution",
            "H2_evolution",
            "HCN_evolution",
            "H_evolution",
            "N2_evolution",
            "NH3_evolution",
            "OH_evolution",
            "O_evolution"
        ],
        // Global parameters (initial conditions)
        "global_variables": ["P_init", "T_init"],
        // Time variable name in HDF5 files
        "time_variable": "t_time"
    },
    
    // ===== PREPROCESSING SETTINGS =====
    "preprocessing": {
        // Number of samples per NPY shard file
        "shard_size": 1000000,
        // Minimum species concentration threshold
        "min_species_threshold": 1e-25,
        // Compression type: null for raw npz files
        "compression": null,
        // Number of parallel workers for preprocessing
        "num_workers": 1,
        // Enable parallel preprocessing (set false for simpler debugging)
        "parallel_enabled": true
    },
    
    // ===== NORMALIZATION SETTINGS =====
    "normalization": {
        // Default normalization method for all variables
        // Options: "standard", "log-standard", "min-max", "log-min-max", "none"
        "default_method": "log-min-max",
        
        // Override methods for specific variables
        "methods": {
            "T_init": "standard",      // Temperature: standard normalization
            "P_init": "log-min-max",    // Pressure: log scale then min-max
            "t_time": "log-min-max"     // Time: log scale then min-max
        },
        
        // Small value to prevent log(0) and division by zero
        "epsilon": 1e-30,
        // Minimum standard deviation to prevent division by tiny values
        "min_std": 1e-10,
        // Clamp normalized values to [-clamp_value, clamp_value]
        "clamp_value": 50.0
    },
    
    // ===== MODEL ARCHITECTURE =====
    "model": {
        // Model type: "deeponet" or "siren"
        "type": "deeponet",
        
        // Activation function: "gelu", "relu", "silu", "tanh"
        "activation": "gelu",
        
        // Dropout rate (0.0 = no dropout)
        "dropout": 0.0,
        
        // Output scaling factor (1.0 = no scaling)
        "output_scale": 1.0,
        
        // DeepONet-specific parameters
        "branch_layers": [384, 64, 512, 512],  // Hidden layers for branch network
        "trunk_layers": [128, 128],   // Hidden layers for trunk network
        "basis_dim": 128,                   // Number of basis functions
        
        // SIREN-specific parameters (when type="siren")
        "hidden_dims": [256, 256, 256, 256],  // Hidden layer dimensions
        "omega_0": 30.0                       // SIREN frequency parameter
    },
    
    // ===== FiLM CONDITIONING =====
    "film": {
        // Enable Feature-wise Linear Modulation
        "enabled": true,
        // Hidden layers for FiLM networks
        "hidden_dims": [64, 64],
        // Activation for FiLM networks
        "activation": "gelu"
    },
    
    // ===== PREDICTION SETTINGS =====
    "prediction": {
        // Prediction mode: "absolute" or "ratio"
        // - absolute: predict species concentrations directly
        // - ratio: predict log-ratios relative to initial conditions (DeepONet only)
        "mode": "absolute",
        
        // Optional output clamping (null = no clamping)
        // Only used in absolute mode
        "output_clamp": null
    },
    
    // ===== TRAINING PARAMETERS =====
    "training": {
        // Data split fractions
        "val_fraction": 0.15,   // Validation set fraction
        "test_fraction": 0.15,  // Test set fraction
        "use_fraction": 1.0,    // Fraction of data to actually use (for debugging)
        
        // Training loop settings
        "epochs": 100,                      // Maximum epochs
        "batch_size": 8192,                 // Batch size
        "gradient_accumulation_steps": 1,   // Gradient accumulation steps
        
        // DataLoader settings
        "num_workers": 1,           // Parallel data loading workers
        "pin_memory": true,          // Pin memory for faster GPU transfer
        "persistent_workers": true,  // Keep workers alive between epochs
        "prefetch_factor": 4,        // Number of batches to prefetch
        "drop_last": true,           // Drop incomplete final batch
        "dataset_cache_shards": 256, // Max shards to cache in memory
        
        // Optimizer settings (AdamW)
        "learning_rate": 3e-4,
        "weight_decay": 1e-5,
        "betas": [0.9, 0.999],  // Adam beta parameters
        "eps": 1e-8,            // Adam epsilon
        
        // Gradient clipping (0 = no clipping)
        "gradient_clip": 1.0,
        
        // Learning rate scheduler
        "scheduler": "cosine",  // Options: "none", "cosine", "plateau"
        "scheduler_params": {
            // For "cosine" scheduler
            "T_0": 10,          // Initial restart period in epochs
            "T_mult": 2,        // Period multiplier after each restart
            "eta_min": 1e-7,    // Minimum learning rate
            
            // For "plateau" scheduler
            "factor": 0.5,      // LR reduction factor
            "patience": 10,     // Epochs to wait before reducing LR
            "min_lr": 1e-7      // Minimum learning rate
        },
        
        // Loss function: "mse", "mae", "huber"
        "loss": "mse",
        "huber_delta": 0.5,  // Delta for Huber loss (if used)
        
        // Mixed precision training
        "use_amp": true,              // Enable automatic mixed precision
        "amp_dtype": "bfloat16",      // AMP dtype: "float16" or "bfloat16"
        
        // Early stopping
        "early_stopping_patience": 15,  // Epochs to wait before stopping
        "min_delta": 1e-10,            // Minimum improvement to reset patience
        
        // Logging intervals
        "log_interval": 1000,           // Log every N gradient steps
        "save_interval": 10,           // Save checkpoint every N epochs
        "empty_cache_interval": 1000,  // Clear GPU cache every N steps
        
        // Hyperparameter optimization settings
        "hpo_epochs": 20  // Reduced epochs for HPO trials
    },
    
    // ===== SYSTEM/HARDWARE SETTINGS =====
    "system": {
        // Random seed for reproducibility
        "seed": 42,
        
        // PyTorch optimizations
        "use_torch_compile": true,   // Use torch.compile (PyTorch 2.0+)
        "compile_mode": "default",   // Compile mode: "default", "reduce-overhead", "max-autotune"
        "use_torch_export": true,    // Export model with torch.export
        
        // CUDA optimizations
        "cudnn_benchmark": true,     // Enable cuDNN autotuner
        "tf32": true,                // Enable TensorFloat-32 on Ampere GPUs
        "cuda_memory_fraction": 0.9  // Fraction of GPU memory to use
    },
    
    // ===== HYPERPARAMETER OPTIMIZATION =====
    "optuna": {
        // Enable Optuna integration
        "enabled": true,
        
        // Optuna study settings (when enabled)
        "n_trials": 100,
        "n_startup_trials": 8,
        "n_warmup_steps": 10,
        "interval_steps": 2
    }
}